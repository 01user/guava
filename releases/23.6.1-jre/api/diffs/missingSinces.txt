OK: com.google.common.collect.BinaryTreeTraverser Class
MISSING @SINCE TAG: com.google.common.escape.ArrayBasedUnicodeEscaper Constructor (com.google.common.escape.ArrayBasedEscaperMap, int, int, java.lang.String)
MISSING @SINCE TAG: com.google.common.escape.ArrayBasedUnicodeEscaper Constructor (java.util.Map<java.lang.Character, java.lang.String>, int, int, java.lang.String)
MISSING @SINCE TAG: com.google.common.util.concurrent.ExecutionError Constructor (java.lang.Error)
MISSING @SINCE TAG: com.google.common.util.concurrent.ExecutionError Constructor (java.lang.String)
MISSING @SINCE TAG: com.google.common.util.concurrent.ExecutionError Constructor (java.lang.String, java.lang.Error)
MISSING @SINCE TAG: com.google.common.util.concurrent.UncheckedExecutionException Constructor (java.lang.String)
MISSING @SINCE TAG: com.google.common.util.concurrent.UncheckedExecutionException Constructor (java.lang.String, java.lang.Throwable)
MISSING @SINCE TAG: com.google.common.util.concurrent.UncheckedExecutionException Constructor (java.lang.Throwable)
NO DOC BLOCK: com.google.common.util.concurrent.UncheckedTimeoutException Constructor (java.lang.String)
NO DOC BLOCK: com.google.common.util.concurrent.UncheckedTimeoutException Constructor (java.lang.String, java.lang.Throwable)
NO DOC BLOCK: com.google.common.util.concurrent.UncheckedTimeoutException Constructor (java.lang.Throwable)
MISSING @SINCE TAG: com.google.common.base.VerifyException Constructor (java.lang.String)
OK: com.google.common.base.VerifyException Constructor (java.lang.String, java.lang.Throwable)
OK: com.google.common.base.VerifyException Constructor (java.lang.Throwable)
MISSING @SINCE TAG: com.google.common.base.Joiner Method appendTo(A extends java.lang.Appendable, java.lang.Object, java.lang.Object, java.lang.Object[])
MISSING @SINCE TAG: com.google.common.base.Joiner Method appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object[])
OK: com.google.common.base.Predicates Method assignableFrom(java.lang.Class<?>)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, char)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, char, char)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, char, int)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, char, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, char, long)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, int)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, int, char)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, int, int)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, int, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, int, long)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, char)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, int)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object, long)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, java.lang.Object[])
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, long)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, long, char)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, long, int)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, long, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkArgument(boolean, java.lang.String, long, long)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, char)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, char, char)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, char, int)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, char, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, char, long)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, int)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, int, char)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, int, int)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, int, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, int, long)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, char)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, int)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object, long)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, java.lang.Object[])
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, long)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, long, char)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, long, int)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, long, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkNotNull(T, java.lang.String, long, long)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkState(boolean, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, char)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, char, char)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, char, int)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, char, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, char, long)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, int)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, int, char)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, int, int)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, int, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, int, long)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, char)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, int)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object, long)
MISSING @SINCE TAG: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, java.lang.Object[])
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, long)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, long, char)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, long, int)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, long, java.lang.Object)
OK: com.google.common.base.Preconditions Method checkState(boolean, java.lang.String, long, long)
OK: com.google.common.io.Closeables Method closeQuietly(java.io.InputStream)
OK: com.google.common.io.Closeables Method closeQuietly(java.io.Reader)
OK: com.google.common.util.concurrent.Futures Method dereference(com.google.common.util.concurrent.ListenableFuture<? extends com.google.common.util.concurrent.ListenableFuture<? extends V>>)
MISSING @SINCE TAG: com.google.common.io.MoreFiles Method directoryTreeTraverser()
MISSING @SINCE TAG: com.google.common.graph.Graphs Method equivalent(com.google.common.graph.Graph<?>, com.google.common.graph.Graph<?>)
MISSING @SINCE TAG: com.google.common.graph.Graphs Method equivalent(com.google.common.graph.Network<?, ?>, com.google.common.graph.Network<?, ?>)
MISSING @SINCE TAG: com.google.common.graph.Graphs Method equivalent(com.google.common.graph.ValueGraph<?, ?>, com.google.common.graph.ValueGraph<?, ?>)
OK: com.google.common.io.Files Method fileTreeTraverser()
MISSING @SINCE TAG: com.google.common.base.Throwables Method propagateIfPossible(java.lang.Throwable, java.lang.Class<X>)
MISSING @SINCE TAG: com.google.common.base.Throwables Method propagateIfPossible(java.lang.Throwable, java.lang.Class<X1>, java.lang.Class<X2>)
MISSING @SINCE TAG: com.google.common.base.Throwables Method propagateIfPossible(java.lang.Throwable)
MISSING @SINCE TAG: com.google.common.collect.Multiset Method remove(java.lang.Object)
MISSING @SINCE TAG: com.google.common.collect.Multiset Method remove(java.lang.Object, int)
OK: com.google.common.util.concurrent.MoreExecutors Method sequentialExecutor(java.util.concurrent.Executor)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, char)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, char, char)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, char, int)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, char, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, char, long)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, int)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, int, char)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, int, int)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, int, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, int, long)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, char)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, int)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object, long)
MISSING @SINCE TAG: com.google.common.base.Verify Method verify(boolean, java.lang.String, java.lang.Object[])
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, long)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, long, char)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, long, int)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, long, java.lang.Object)
OK: com.google.common.base.Verify Method verify(boolean, java.lang.String, long, long)
