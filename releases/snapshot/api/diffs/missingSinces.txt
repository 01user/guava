OK: com.google.common.util.concurrent.ForwardingBlockingDeque Class
MISSING @SINCE TAG: com.google.common.collect.ImmutableRangeSet Method addAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.ImmutableRangeSet.Builder Method addAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.RangeSet Method addAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.ImmutableRangeSet Method copyOf(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.TreeRangeSet Method create(java.lang.Iterable<com.google.common.collect.Range<C>>)
NO DOC BLOCK: com.google.common.collect.MutableClassToInstanceMap Method delegate()
OK: com.google.common.collect.RangeSet Method enclosesAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
NO DOC BLOCK: com.google.common.collect.MutableClassToInstanceMap Method entrySet()
NO DOC BLOCK: com.google.common.collect.MutableClassToInstanceMap Method put(java.lang.Class<? extends B>, B)
NO DOC BLOCK: com.google.common.collect.MutableClassToInstanceMap Method putAll(java.util.Map<? extends java.lang.Class<? extends B>, ? extends B>)
MISSING @SINCE TAG: com.google.common.collect.ImmutableRangeSet Method removeAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.RangeSet Method removeAll(java.lang.Iterable<com.google.common.collect.Range<C>>)
OK: com.google.common.collect.ImmutableList Method sortedCopyOf(java.lang.Iterable<? extends E>)
OK: com.google.common.collect.ImmutableList Method sortedCopyOf(java.util.Comparator<? super E>, java.lang.Iterable<? extends E>)
OK: com.google.common.collect.ImmutableRangeSet Method unionOf(java.lang.Iterable<com.google.common.collect.Range<C>>)
